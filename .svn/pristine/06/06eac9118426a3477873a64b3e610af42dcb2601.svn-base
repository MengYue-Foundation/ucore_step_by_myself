#ifndef __LIBS_X86_H__
#define __LIBS_X86_H__

#include <types.h>
#define barrier()   __asm__ __volatile__    ("" ::: "memory")

static inline uint8_t inb(uint16_t port) __attribute__ ((always_inline));
static inline void outb(uint16_t port, uint8_t data) __attribute__ ((always_inline));

/*inb 从端口里读取数据
=表示 是输出操作数， a表示把变量放入 eax寄存器
int port data
*/
static inline uint8_t
inb(uint16_t port){
    uint8_t data;
    asm volatile ("inb %1, %0" : "=a"(data) : "d"(port) : "memory");
    return data;
}

/*out data  port*/
static inline void 
outb(uint16_t port, uint8_t data) {
    asm volatile ("outb %0, %1" : : "a"(data), "d"(port) : "memory");
}


#endif /* !__LIBS_X86_H__ */


